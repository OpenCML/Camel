module fib

import { now } from time

var cnt = 0

func fibonacci(n: int): int sync {
    wait cnt += 1
    return match n {
        case 0 => 0
        case 1 => 1
        case _ => fibonacci(n - 1) + fibonacci(n - 2)
    }
}

func main(): int sync {
    let idx = 25
    'Start computing fibonacci({})...'->format<idx>->println
    let start = now()
    let res = fibonacci(idx)
    let duration = now() - start
    'Total calls made: {}'->format<cnt>->println
    'Fibonacci({}) = {} (computed in {} seconds)'->format<idx, res, duration>->println
    return 0
}