/**
tail-recursive factorial function
This test checks that tail-call optimization is working correctly.
*/

module fib

import { now } from time

func factorial(n: int64, acc: int64): int64 {
    return if n == 0 then acc
    else factorial(n - 1, n * acc)
}

export func main(): int sync {
    let idx = 60
    println("Start computing factorial({})...".format(idx))
    let start = now()
    let res = factorial(idx, 1)
    let duration = now() - start
    println("factorial({}) = {} (computed in {} seconds)".format(idx, res, duration))
    return 0
}